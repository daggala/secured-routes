{"version":3,"sources":["LoginForm.js","App.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","getPrivateApp","a","axios","get","status","window","location","reload","href","console","log","auth","e","preventDefault","res","className","onSubmit","type","onChange","target","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPA6DeA,MA1Df,WAAsB,IAAD,EACaC,qBADb,mBACZC,EADY,KACFC,EADE,OAEaF,qBAFb,mBAEZG,EAFY,KAEFC,EAFE,KAIbC,EAAa,uCAAG,sBAAAC,EAAA,+EAEAC,IAAMC,IAAI,cAFV,OAGC,MAHD,OAGVC,OAINC,OAAOC,SAASC,SAEhBF,OAAOC,SAASE,KAAO,yBATP,gDAYlBC,QAAQC,IAAR,MAZkB,yDAAH,qDAgBbC,EAAI,uCAAG,WAAOC,GAAP,eAAAX,EAAA,6DACXQ,QAAQC,IAAI,QAASC,GACrBC,EAAEC,iBACFJ,QAAQC,IAAI,QAASd,EAAU,YAAaE,GAHjC,kBAKSI,IAAMC,IAAI,gBAAiB,CAC3CQ,KAAM,CAAEf,WAAUE,cANX,OAKHgB,EALG,OASTL,QAAQC,IAAI,OAAQI,GACD,MAAfA,EAAIV,SAGNC,OAAOC,SAASE,KAAO,kCACvBR,KAdO,kDAiBTS,QAAQC,IAAR,MAjBS,0DAAH,sDAqBV,OACE,qBAAKK,UAAU,MAAf,SACE,uBAAMC,SAAUL,EAAhB,UACE,+CACA,uBACA,uBAAOM,KAAK,OAAOC,SAAU,SAACN,GAAD,OAAOf,EAAYe,EAAEO,OAAOC,UACzD,uBACA,+CACA,uBACA,uBAAOH,KAAK,WAAWC,SAAU,SAACN,GAAD,OAAOb,EAAYa,EAAEO,OAAOC,UAC7D,uBACA,wBAAQH,KAAK,SAAb,yBC5COI,MARf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCDNO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ced972fd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction LoginForm() {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n\n  const getPrivateApp = async () => {\n    try {\n      const res = await axios.get(\"/protected\");\n      if (res.status === 200) {\n        //Even though we're already at /protected path\n        //we have to reload in order to make a HTTP call\n        //to be able to fetch the index file for the private SPA.\n        window.location.reload();\n      } else {\n        window.location.href = \"http://localhost:5000/\";\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const auth = async (e) => {\n    console.log(\"auth \", auth);\n    e.preventDefault();\n    console.log(\"user \", username, \"password \", password);\n    try {\n      const res = await axios.get(\"/authenticate\", {\n        auth: { username, password },\n      });\n\n      console.log(\"res \", res);\n      if (res.status === 200) {\n        //we're using history here to relocate the user, but without\n        //making a new HTTP call\n        window.location.href = \"http://localhost:5000/protected\";\n        getPrivateApp();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={auth}>\n        <label>Username: </label>\n        <br />\n        <input type=\"text\" onChange={(e) => setUsername(e.target.value)} />\n        <br />\n        <label>Password: </label>\n        <br />\n        <input type=\"password\" onChange={(e) => setPassword(e.target.value)} />\n        <br />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport LoginForm from \"./LoginForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LoginForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}